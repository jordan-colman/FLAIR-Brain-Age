FROM ubuntu:18.04

#
#   This is a docker containter for building brain Age 3D FLAIR image.
#   To build it use the following command:
#      docker build --tag=flair-brainage-v1.0 -f `pwd`/DockerFile `pwd`
#
#   To execute it, please use the following command:
#       docker run --rm -it \
#		      -v `pwd`:/data \
#		      flair-brainage-v1.0 \
#		      compute_brainAge.sh  \
#             input_file.nii.gz 39
#      

# Add version from build arguments
ARG version_arg=""
ENV VERSION=$version_arg
# Add proxies from build arguments
ARG proxy_arg=""
ENV http_proxy=${proxy_arg}
ENV https_proxy=${proxy_arg}

# We make some directories that we will need
RUN mkdir -p /usr/bin/scripts && \
    mkdir -p /opt && \
    mkdir -p /usr2/mrtools/niftyview/bin && \
    mkdir -p /data  

# This file is needed for downloading FSL NeuroDebian package
COPY neurodebian.gpg /root/.neurodebian.gpg

# FSL environment variables
ENV POSSUMDIR=/usr/share/fsl/5.0
ENV FSLOUTPUTTYPE="NIFTI_GZ"
ENV FSLDIR=/usr/share/fsl/5.0
ENV FSLMULTIFILEQUIT=TRUE
ENV FSLTCLSH=/usr/bin/tclsh
ENV FSLWISH=/usr/bin

# FSL, R and NIFTK library path
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/fsl/5.0
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr2/mrtools/niftyview/bin/
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/lib64/R/lib

# We include all the executables and scripts in the path
ENV PATH=${PATH}:$FSLDIR/bin:${PATH}/wish
ENV PATH=${PATH}:/usr/bin/scripts:${QNIDIR}/bin
ENV PATH=${PATH}:/opt/conda/bin
ENV PATH=${PATH}:/usr2/mrtools/niftyview/bin/

# For downloading NeuroDebian FSL version -> from bionic 18.04
ENV NDEB_URL=http://neuro.debian.net/lists/bionic.us-ca.full
ENV DEBIAN_FRONTEND=noninteractive

# Install the needed packages
RUN apt-get -y update
RUN apt-get install -y --fix-missing \
      cmake \
      gcc \
      g++ \
      git \
      libeigen3-dev \
      zlib1g-dev \
      libpng-dev \
      openssl \
      libssl-dev \
      doxygen \
      xvfb \
      curl \
      wget \
      apt-transport-https \
      ca-certificates \
      libcurl3-gnutls

# Install FSL 5.0 and the python libraries
ENV TZ=Europe/London
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN apt-get install -y software-properties-common 
RUN add-apt-repository universe
RUN apt-get update
RUN curl -sSL http://neuro.debian.net/lists/bionic.us-ca.full >> /etc/apt/sources.list.d/neurodebian.sources.list && \
        apt-key add /root/.neurodebian.gpg && \
        (apt-key adv --refresh-keys --keyserver hkp://ha.pool.sks-keyservers.net 0xA5D32F012649A5A9 || true) && \
        apt-get update
RUN apt-get update && \
    apt-get install -y --allow-unauthenticated \
        fsl-5.0-core \
        fsl-mni152-templates=5.0.7-2

# Add default niftyreg and niftyseg tools from qni-base image
COPY --from=qni-base-v1.0:latest /usr/local/bin/reg_* /usr/local/bin/
COPY --from=qni-base-v1.0:latest /usr/local/bin/seg_* /usr/local/bin/
COPY --from=qni-base-v1.0:latest /usr2/mrtools/niftyview/bin/* /usr2/mrtools/niftyview/bin/

# We download all the libraries and software needed to run NIFTK
RUN apt-get update && \
    apt-get install -y \
      cmake \
      insighttoolkit4-examples \
      libfftw3-dev \
      libinsighttoolkit4-dev \
      libinsighttoolkit4.* \
      tcl8.6 \
      tk8.6 \
      libpng12* \
      libtiff* \
      uuid* \
      libicu* \
      libgomp1 

# Python installation for brainAge
# Download and install python 3.9 with Conda for running brainAge
RUN wget https://repo.anaconda.com/miniconda/Miniconda3-py39_23.1.0-1-Linux-x86_64.sh && \
    sh Miniconda3-py39_23.1.0-1-Linux-x86_64.sh -b -p /opt/conda-p3.9 && \
    rm Miniconda3-py39_23.1.0-1-Linux-x86_64.sh && \
    cd /opt 

# The default h5py package gives incompatibility problems with Keras, when loading weights, we need to downgrade
# We install the packages choosing the specific version to avoid problems
# Also we encapsulate all in a specific python environment for NICMSLesions
RUN . /opt/conda-p3.9/etc/profile.d/conda.sh && \
    /opt/conda-p3.9/bin/conda create -n env_brainAge python=3.9 && \
    conda activate env_brainAge && \
    pip install nibabel==5.0.0 && \
    pip install pandas==1.1.5 && \
    pip install numpy==1.20 && \
    pip install torch==1.13.1  && \
    pip install simpleitk==2.2.1 && \
    pip install scikit-build && \
    pip install make && \
    pip install antspyx==0.3.8 && \
    pip install monai-weekly==1.2.dev2309 

# Clean up a little bit the things
RUN apt-get autoremove -y
RUN apt-get clean all && \
    apt-get purge

# These are the files needed for brainAge
COPY brainAge/weights_brainAge/*pth /weights/
COPY brainAge/*py  /usr/bin/scripts/

# Copy all the scripts and binaries needed inside the container.
COPY scripts/* /usr/bin/scripts/
COPY compute_brainAge.sh /usr/bin/scripts/compute_brainAge.sh

# We setup the permissions for running scripts
RUN chmod 755 /usr/bin/scripts/* 